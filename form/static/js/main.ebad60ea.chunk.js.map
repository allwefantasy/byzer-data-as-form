{"version":3,"sources":["service/backend/RestConst.js","service/Dicts.js","user/user.js","service/backend/Backend.js","service/RemoteAction.js","service/ActionProxy.js","components/api_form/Warning.js","components/BaseReactComp/BaseComp.js","components/api_form/DynamicAddInput.js","components/api_form/autogens/AutoGenForm.js","utils/Utils.js","components/api_form/autogens/AutoGenBaseComp.js","components/api_form/autogens/AutoGenInput.js","components/api_form/autogens/AutoGenSelect.js","components/api_form/autogens/AutoGenCheckBox.js","components/api_form/autogens/AutoGenTreeView2.js","components/api_form/autogens/AutoGenDynamic.js","components/api_form/autogens/AutoGenEditor.js","components/api_form/autogens/AutoGenUpload.js","components/api_form/FormElementMapping.js","components/api_form/Form.js","components/api_form/TableView.js","components/APIView.js","components/api_main/APICard.js","components/APIMain.js","components/APINav.js","router/BaseRouter.js","router/APINavSwitcher.js","components/api_main/APIBar.js","router/APIViewSwitcher.js","components/APITest.tsx","App.js","serviceWorker.js","index.js"],"names":["Method","GET","POST","PUT","DELETE","AccessToken","name","firstName","GlobalParamNames","getUserInfo","userInfoStr","localStorage","getItem","LOGIN_TOKEN","userInfo","JSON","parse","token","userName","params","USER_NAME","logout","a","removeItem","proxy","ActionProxy","post","USER_ID","ADMIN_TOKEN","RestResponse","status","content","this","Backend","url","fetch_config","action","property","method","toUpperCase","formBody","encodedKey","encodeURIComponent","encodedValue","push","newurl","join","undefined","basic_config","timeout","headers","sessionStorage","body","final_config","fetch","response","ok","text","error","json","RemoteAction","HELLO","LIST_SCRIPT_FILE","CREATE_SCRIPT_FILE","LIST_ACTIONS","LIST_APINavItems","LIST_APINav","ChooseAPINav","USERE_NAME","SIGH_IN_MAIN_PAGE","backend","request","res","Warning","props","warn","title","setState","open","handleClose","state","Dialog","onClose","aria-labelledby","aria-describedby","DialogTitle","id","DialogContent","DialogContentText","DialogActions","Button","onClick","color","React","Component","BaseComp","Promise","resolve","DynamicAddInput","addItem","value","input","TextField","variant","margin","fullWidth","autoFocus","onChange","evt","form","forms","target","label","wow","elements","concat","popupVisible","handleOk","inputName","handleCancel","popup","newFieldName","visible","onOk","onCancel","AutoGenForm","useStyles","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","backgroundColor","palette","secondary","main","width","submit","back","preventDefault","router","popPage","addParams","dynamicInputRef","instances","item","classes","Container","component","maxWidth","ref","containerRef","CssBaseline","warningRef","className","Avatar","Typography","noValidate","ButtonGroup","aria-label","type","Utils","list","n","length","stepSize","Math","floor","groups","groupNum","range","i","min","setEqual","b","temp1","temp2","forEach","indexOf","buildTree","node","tempMap","roots","childNodes","parentId","e","console","log","throttle","fn","wait","timer","setTimeout","args","apply","debounce","delay","clearTimeout","AutoGenBaseComp","addMonitor","monitor","monitors","values","data","dependencies","collect_dependencies","reload","bind","Set","Array","from","map","resp","message","AutoGenInput","handleChange","event","options","AutoGenSelect","select","option","MenuItem","key","AutoGenCheckBox","checked","GreenCheckbox","withStyles","root","green","Checkbox","items","statue","FormControlLabel","control","AutoGenTreeView2","toggleIsExpanded","isExpanded","isRootNode","nodeId","nodes","handleNodeClick","handNodeDoubleClick","handleNodeCollapse","handleNodeExpand","onNodeContextMenu","add","nodeData","_nodePath","originallySelected","isSelected","shiftKey","forEachNode","callback","contents","onNodeClick","onNodeCollapse","onNodeExpand","onNodeDoubleClick","TreeNodeEnum","DIR","FILE","AutoGenDynamic","subTpe","row","meta","stringify","FormElementMapping","mapping","AutoGenEditor","editorRef","editor","getValue","language","defaultSize","height","onResize","resize","mode","fontSize","showPrintMargin","showGutter","highlightActiveLine","editorProps","$blockScrolling","Infinity","setOptions","enableBasicAutocompletion","enableLiveAutocompletion","enableSnippets","showLineNumbers","tabSize","autoScrollEditorIntoView","baseStyle","borderWidth","borderColor","borderStyle","borderRadius","activeStyle","rejectStyle","AutoGenUpload","onDrop","files","BACKEND_URL","req","file","attach","path","end","err","msg","toString","paths","f","size","getDataTransferItems","fromEvent","getRootProps","getInputProps","isDragActive","isDragAccept","isDragReject","styles","acceptedFiles","rejectedFiles","style","pushInstance","valueProviderName","depends","build","FormBuilder","extra_params","tpe","autogen","replace","setTitle","TableView","load","isArray","maxSize","maxSizeItem","Object","keys","columns","newData","col","index","substring","rows","table","minWidth","tableHeaders","TableCell","tableRows","tableRow","scope","TableRow","TableContainer","Paper","Table","TableHead","TableBody","APIView","new_extra_params","errorView","view","setItem","refreshBar","ex","builder","setStateSync","inputWithDepends","filter","inputAlonesMap","dep","card","bullet","transform","pos","marginBottom","handleClick","Card","CardContent","CardActions","background","handleListItemClick","toAction","toNav","get","myself","cards","comp","APICard","groupName","hasOwnProperty","children","entries","Step","Steps","APINav","openNotificationWithIcon","description","notification","current","steps","apiNavId","bordered","next","success","marginLeft","prev","BaseRouter","app","pages","func","toPage1","pop","page","APINavSwitcher","page1","page2","toPage2","apiView","flexGrow","grow","menuButton","marginRight","AppBar","position","Toolbar","IconButton","APIViewSwitcher","nav","current_action","refresh","queryString","window","location","href","split","current_page","APIBar","APITest","App","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ebad60ea.chunk.js","sourcesContent":["export const BACKEND_SERVER = \"\";\nexport const BACKEND_URL = BACKEND_SERVER + \"/run\";\n\n\nexport class Method{\n    static GET = \"get\"\n    static POST = \"post\"\n    static PUT = \"put\"\n    static DELETE  = \"delete\"    \n}\n\nexport const Status = {\n    Success: 200,\n    BadRequest: 400,\n    Unauthorized: 401,\n    Forbidden: 404,\n    ServerError: 500\n}\n\nexport const AccessToken = {\n    name: \"access-token\"\n}\n\n","export class LangKey{\n    static firstName = \"firstName\"   \n}\nexport class GlobalParamNames {\n    static USER_NAME = \"userName\"\n    static USER_ID = \"userId\"\n    static ADMIN_TOKEN = \"admin_token\"\n    static LOGIN_TOKEN = \"access-token\"\n}","import {useState} from 'react'\nimport {GlobalParamNames} from \"../service/Dicts\";\nimport {ActionProxy} from \"../service/ActionProxy\";\n\nfunction useToken() {\n    const getToken = () => {\n        const userInfo = getUserInfo()\n        return userInfo.token\n    }\n    const [token, setToken] = useState(getToken)\n    const saveToken = userInfo => {\n        localStorage.setItem(GlobalParamNames.LOGIN_TOKEN, JSON.stringify(userInfo))\n        setToken(userInfo.token)\n    }\n\n    return {setToken: saveToken, token}\n}\n\nfunction setUserInfo(userInfo) {\n    localStorage.setItem(GlobalParamNames.LOGIN_TOKEN, JSON.stringify(userInfo))\n}\n\nfunction getUserInfo() {\n    const userInfoStr = localStorage.getItem(GlobalParamNames.LOGIN_TOKEN)\n    if(userInfoStr === \"\" || userInfoStr == null) {\n        return {}\n    }\n    const userInfo = JSON.parse(userInfoStr)\n    return {token: userInfo?.token, userName: userInfo?.params[GlobalParamNames.USER_NAME]}\n}\n\nasync function logout() {\n    localStorage.removeItem(GlobalParamNames.LOGIN_TOKEN)\n    const proxy = new ActionProxy()\n    await proxy.post(\"userLogout\",{})\n}\n\nfunction getUserName() {\n    return getUserInfo().userName\n}\n\nexport {useToken, getUserName, getUserInfo,setUserInfo,logout}","import {BACKEND_URL, AccessToken} from './RestConst'\nimport {GlobalParamNames} from '../Dicts'\nimport {getUserInfo} from '../../user/user'\n\nexport class RestResponse {\n    constructor(status, content) {\n        this.status = status\n        this.content = content\n    }\n}\n\nexport class Backend {\n\n    constructor(url, fetch_config = {}) {\n        this.url = url\n        if (!this.url) {\n            this.url = BACKEND_URL\n        }\n        this.fetch_config = fetch_config\n    }\n\n    async request(action, params, method = \"GET\") {\n        method = method.toUpperCase();\n        const {token, userName} = getUserInfo()\n        if (userName) {\n            params[GlobalParamNames.USER_NAME] = userName\n        }\n\n        if (token) {\n            params[GlobalParamNames.LOGIN_TOKEN] = token\n        }\n\n        let formBody = [];\n        for (let property in params) {\n            let encodedKey = encodeURIComponent(property);\n            let encodedValue = encodeURIComponent(params[property]);\n            formBody.push(encodedKey + \"=\" + encodedValue);\n        }\n        let newurl = this.url + \"?\" + \"action=\" + action\n\n        if (method === \"GET\") {\n            newurl = newurl + \"&\" + formBody.join(\"&\")\n            formBody = undefined\n        } else {\n            formBody = formBody.join(\"&\")\n        }\n\n        const basic_config = {\n            method: method,\n            timeout: 1000 * 60 * 60 * 24,\n            headers: {\n                'Content-Type': 'application/x-www-form-urlencoded',\n                'Accept': 'application/json',\n                'Access-Token': sessionStorage.getItem(AccessToken) || ''\n            },\n            body: formBody\n        }\n\n        const final_config = {...basic_config, ...this.fetch_config}\n\n        try {\n            const response = await fetch(newurl, final_config);\n            if (!response.ok) {\n                const error = await response.text()\n                return new RestResponse(response.status, error);\n            }\n            const json = await response.json();\n            return new RestResponse(200, json);\n        } catch (err) {\n            return new RestResponse(500, err);\n        }\n    }\n}\n","export default class RemoteAction{\n    static HELLO = \"hello_world\" \n    static LIST_SCRIPT_FILE= \"listScriptFile\"\n    static CREATE_SCRIPT_FILE= \"createScriptFile\" \n    static LIST_ACTIONS =\"listActions\"\n    static LIST_APINavItems = \"listAPINavItems\"\n    static LIST_APINav = \"listAPINav\"\n    static ChooseAPINav = \"chooseAPINav\"\n\n}","import {RestResponse,Backend} from './backend/Backend'\nimport RemoteAction from './RemoteAction'\nimport {Method,Status} from './backend/RestConst'\n\nexport class UserActionParams {\n  static USERE_NAME = \"userName\"   \n  \n}\nexport class ResponseKey {\n   static SIGH_IN_MAIN_PAGE = \"sighInMainPage\"\n}\n\n\nexport class ActionProxy {\n    constructor(){\n        this.backend = new Backend()        \n    }    \n    async hello(){        \n      const res = await this.backend.request(RemoteAction.HELLO,{},Method.GET)\n      return res\n    }\n\n    /**\n     * \n     * @param {string} action \n     * @param {{}} params \n     * @return {RestResponse}\n     */\n    async get(action,params){\n      const res = await this.backend.request(action,params,Method.GET)\n      return res\n    }\n\n    /**\n     * \n     * @param {string} action \n     * @param {{}} params \n     * @returns {RestResponse}\n     */\n    async post(action,params){        \n        const res = await this.backend.request(action,params,Method.POST)\n        return res\n      }\n}\n\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nexport default class Warning extends React.Component {\n\n  constructor(props){\n    super(props)\n    this.state = {open:false}\n  }\n  warn = (title,content) => {\n    this.setState({open:true,title:title,content:content})\n    \n  }\n  handleClose = () => {\n    this.setState({open:false})\n  };\n  render(){\n  \n  return (\n    <div>      \n      <Dialog\n        open={this.state.open}\n        onClose={this.handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{this.state.title}</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            {this.state.content}\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={this.handleClose} color=\"primary\">\n            Close\n          </Button>          \n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n  }\n}","\nimport React from 'react'\n\nexport class BaseComp extends React.Component {\n    setStateSync(state) {\n        return new Promise((resolve) => {\n            this.setState(state, resolve)\n        });\n    }\n}","import React from 'react'\nimport { BaseComp } from \"../BaseReactComp/BaseComp\";\nimport { Modal } from 'antd';\nimport TextField from '@material-ui/core/TextField';\n\nexport class DynamicAddInput extends BaseComp{\n    constructor(props){\n        super(props)\n        this.form = props.form\n        this.state={elements:[],popupVisible:false}        \n    }\n\n    addItem = (name,value)=>{\n        const handleChange = (evt)=>{            \n          this.form.forms[name] = evt.target.value          \n        }\n        const input =  <TextField \n        variant=\"outlined\"\n        margin=\"normal\"            \n        fullWidth                        \n        autoFocus  \n        onChange={handleChange} \n         name={name} label={name}/>\n        const wow = this.state.elements.concat(input)         \n        this.setState({elements:[wow],popupVisible:false})\n    }\n\n    handleOk = ()=>{    \n      this.addItem(this.inputName,\"\")    \n    }\n\n    handleCancel = ()=>{\n      this.setState({popupVisible:false})\n    }\n\n    popup = ()=>{\n        this.setState({popupVisible:true})  \n    }\n\n    newFieldName = (evt)=>{\n       this.inputName = evt.target.value\n    }\n\n    render(){\n        return <div>\n            <Modal\n              title=\"Add New Param\"\n              visible={this.state.popupVisible}\n              onOk={this.handleOk}\n              onCancel={this.handleCancel}\n        >\n        <TextField onChange={this.newFieldName}\n        variant=\"outlined\"\n        margin=\"normal\"            \n        fullWidth                        \n        autoFocus          \n        name=\"fieldName\" label=\"New field name\"/>        \n        </Modal>\n            {this.state.elements}\n        </div>\n    }\n\n}","import React from 'react'\nimport {makeStyles} from '@material-ui/core/styles';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport Warning from '../Warning'\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport {DynamicAddInput} from '../DynamicAddInput';\nimport './AutoGenForm.css'\n\nexport class AutoGenForm {\n\n    constructor(props) {\n\n        this.action = props.action\n        this.forms = []\n        this.elements = []\n        this.instances = []\n        this.submit = props.submit\n        this.router = props.router\n        this.title = props.action\n    }\n\n    useStyles = () => makeStyles(theme => ({\n        paper: {\n            marginTop: theme.spacing(8),\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n        },\n        avatar: {\n            margin: theme.spacing(1),\n            backgroundColor: theme.palette.secondary.main,\n        },\n        form: {\n            width: '100%', // Fix IE 11 issue.\n            marginTop: theme.spacing(1),\n        },\n        submit: {\n            margin: theme.spacing(3, 3, 2),\n        },\n    }));\n\n    push(item) {\n        this.elements.push(item)\n    }\n\n    setTitle(title) {\n        this.title = title\n    }\n\n    pushInstance(item) {\n        this.instances.push(item)\n    }\n\n    back = (evt) => {\n        evt.preventDefault()\n        this.router.popPage()\n    }\n\n    addParams = (evt) => {\n        evt.preventDefault()\n        this.dynamicInputRef.popup()\n    }\n\n    build() {\n        const classes = this.useStyles();\n\n        return (\n\n            <Container component=\"main\" maxWidth=\"xs\" ref={(item) => this.containerRef = item}>\n                <CssBaseline/>\n                <div>\n                    <Warning ref={(item) => {\n                        this.warningRef = item\n                    }}></Warning>\n                </div>\n                <div className={classes.paper}>\n                    <Avatar className={classes.avatar}>\n                        <LockOutlinedIcon/>\n                    </Avatar>\n                    <Typography component=\"h1\" variant=\"h5\">\n                        {\n                            (this.title && this.title !== this.action) ? this.title + \"/\" : \"\"\n                        }{this.action}\n                    </Typography>\n                    <form className={classes.form} noValidate>\n                        {this.elements}\n                        <DynamicAddInput ref={item => this.dynamicInputRef = item} form={this}></DynamicAddInput>\n                        <ButtonGroup color=\"primary\" aria-label=\"outlined primary button group\">\n                            <Button\n                                type=\"submit\"\n                                variant=\"contained\"\n                                color=\"primary\"\n                                className={classes.submit}\n                                onClick={this.submit}\n                            >\n                                Commit\n                            </Button>\n                            <Button\n                                type=\"submit\"\n                                variant=\"outlined\"\n                                color=\"primary\"\n                                className={classes.submit}\n                                onClick={this.back}\n                            >\n                                Back\n                            </Button>\n                            <Button\n                                type=\"submit\"\n                                variant=\"outlined\"\n                                color=\"primary\"\n                                className={classes.submit}\n                                onClick={this.addParams}\n                            >\n                                Add Params\n                            </Button>\n                        </ButtonGroup>\n                    </form>\n                </div>\n            </Container>\n        );\n    }\n}","export class Utils {\n    \n    \n    static setEqual=(a,b)=>{\n        const temp1 = [...a]\n        const temp2 = [...b]\n        if(temp1.length!==temp2.length) return false\n        let res = true\n        temp1.forEach(item=>{\n             if(temp2.indexOf(item) === -1){\n                 res = false\n             }\n        })\n        return res\n    }\n\n    /**\n     *\n     * Usage:\n     *\n     * convert flat array to tree structure\n     *\n     * input data：\n     * [{\"id\":1,\"icon\":null,\"label\":null,\"parentId\":0},\n     * {\"id\":2,\"icon\":\"document\",\"label\":\"jack\",\"parentId\":0},\n     * {\"id\":3,\"icon\":\"document\",\"label\":\"dafe\",\"parentId\":0}\n     * ]\n     *\n     * output:\n     *\n     * @param {[{id:number,icon:string,label:string,parentId:number,childNodes:[]}]} list\n     */\n    static buildTree = (list) => {\n        let tempMap = {}, node, roots = [], i;\n        for (i = 0; i < list.length; i += 1) {\n            tempMap[list[i].id] = i;\n            list[i].childNodes = [];\n        }\n        for (i = 0; i < list.length; i += 1) {\n            node = list[i];\n            if (node.parentId !== 0) {\n                try {\n                    list[tempMap[node.parentId]].childNodes.push(node);\n                } catch (e) {\n                    console.log(\"------------\")\n                    console.log(node)\n                    console.log(tempMap[node.parentId])\n                }\n\n            } else {\n                roots.push(node);\n            }\n        }\n        return roots;\n    }\n    /**\n     * example:\n     * \n     * btn.onclick = throttle(function(){\n           console.log(\"button clicked\");\n         }, 500);\n     */\n    static throttle = (fn, wait) => {\n        let timer;\n        return function (...args) {\n            if (!timer) {\n                timer = setTimeout(() => timer = null, wait);\n                return fn.apply(this, args);\n            }\n        }\n    }\n\n    /**\n     * example:\n     * \n     * window.addEventListener(\"scroll\", debounce(function(){\n                console.log(\"scrolled\");\n            }, 500));\n     */\n    static  debounce = (fn, delay)=>{    \n        var timer = null;    \n        return function(...args){\n          clearTimeout(timer);\n          timer = setTimeout(() => fn.apply(this, args), delay);\n        }\n      }\n    /**\n       * \n       * @param {Array} list \n       * @param {Number} n\n       */\n    static splitListToNGroup(list, n) {\n        if (list.length === 0) return [list]\n        if (list.length <= n) return [list]\n\n        let stepSize = Math.floor(list.length / n)\n        if (stepSize < list.length / n) {\n            stepSize = stepSize + 1\n        }\n        const groups = []\n\n        for (var groupNum = 0; groupNum < n; groupNum++) {\n            const range = []\n            for (var i = (groupNum * stepSize); i < Math.min(((groupNum + 1) * stepSize), list.length); i++) {\n                range.push(list[i])\n            }\n            if (range.length > 0) {\n                groups.push(range)\n            }\n\n        }\n        return groups\n    }\n\n    /**\n     * \n     * @param {Array} list \n     * @param {Number} n\n     */\n    static splitListToNGroupByStepSize(list, stepSize) {\n        if (list.length === 0) return [list]\n        if (list.length <= stepSize) return [list]\n\n        let n = Math.floor(list.length / stepSize)\n        if (n < list.length / stepSize) {\n            n = n + 1\n        }\n        const groups = []\n\n        for (var groupNum = 0; groupNum < n; groupNum++) {\n            const range = []\n            for (var i = (groupNum * stepSize); i < Math.min(((groupNum + 1) * stepSize), list.length); i++) {\n                range.push(list[i])\n            }\n            if (range.length > 0) {\n                groups.push(range)\n            }\n\n        }\n        return groups\n    }\n}","import { BaseComp } from \"../../BaseReactComp/BaseComp\";\nimport { ActionProxy } from \"../../../service/ActionProxy\";\nimport { Utils } from \"../../../utils/Utils\";\nimport { message } from 'antd';\n\nexport class AutoGenBaseComp extends BaseComp {\n   /**\n     * \n     * @param {form:AutoGenForm,name:string,values:[],dependencies:[],action:string} props\n     */\n    constructor(props){\n        super(props)\n        this.form = props.form\n        this.name = props.name\n        this.state = {values:props.values,data:props.data}\n\n        this.forms = this.form.forms                        \n        this.monitors = []\n        this.dependencies = props.dependencies\n        this.collect_dependencies = []\n        this.action = props.action\n\n        this.reload = this.reload.bind(this)\n      }\n\n      async reload (input){\n        this.collect_dependencies.push(input)        \n        const temp1 = new Set(Array.from(this.collect_dependencies).map(item => item.name))\n        const temp2 = new Set(this.dependencies)\n        \n        \n        if(Utils.setEqual(temp1,temp2)){          \n          const proxy = new ActionProxy()\n          const params = {}\n          this.dependencies.forEach(item=>params[item]=this.forms[item])          \n          const resp = await proxy.backend.request(this.action,params,\"POST\")\n          if(resp.status === 200){\n            this.setState({values:resp.content})\n          }else {\n            message.error(resp.content,6);\n          }          \n        }\n      }\n\n      addMonitor=(monitor)=>{\n        this.monitors.push(monitor)\n      }\n}","import React from 'react'\nimport TextField from '@material-ui/core/TextField';\nimport { AutoGenBaseComp } from './AutoGenBaseComp';\n\n\nexport class AutoGenInput extends AutoGenBaseComp{\n    /**\n     * \n     * @param {AutoGenForm} form \n     */\n    constructor(props){\n        super(props)\n      }\n      \n      handleChange = (event)=>{    \n        this.forms[this.name]=event.target.value        \n        this.monitors.forEach(monitor=>monitor.reload(this))\n      }\n\n      render(){        \n        return (\n            \n            <TextField \n            variant=\"outlined\"\n            margin=\"normal\"            \n            fullWidth                        \n            autoFocus  \n            onChange={this.handleChange}          \n            form={this.form} name={this.name} label={this.state.data.options?.label || this.name} />\n                      \n        );\n      }\n}","import React from 'react'\nimport TextField from '@material-ui/core/TextField';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { AutoGenBaseComp } from './AutoGenBaseComp';\n\nexport class AutoGenSelect extends AutoGenBaseComp{\n    /**\n   * \n   * @param {AutoGenForm} form \n   */\n    constructor(props) {\n        super(props)\n    }\n    \n    handleChange = (event)=>{    \n      this.forms[this.name]=event.target.value\n      this.monitors.forEach(monitor=>monitor.reload(this))\n    }\n    \n\n    render() {\n        return (\n            <TextField\n                variant=\"outlined\"\n                margin=\"normal\"\n                fullWidth\n                autoFocus\n                id=\"standard-select-currency\"\n                name={this.name}\n                select\n                label={this.state.data.options?.label || this.name}\n                onChange={this.handleChange}\n            >\n                {this.state.values.map(option => (\n                    <MenuItem key={option.name} value={option.value}>\n                        {option.name}\n                    </MenuItem>\n                ))}\n            </TextField>\n\n        );\n    }\n}","import React from 'react'\nimport { withStyles } from '@material-ui/core/styles';\nimport { green } from '@material-ui/core/colors';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport { AutoGenBaseComp } from './AutoGenBaseComp';\n\n\nexport class AutoGenCheckBox extends AutoGenBaseComp{    \n    constructor(props){\n        super(props)        \n      }\n      \n      handleChange = (event)=>{    \n        this.forms[this.name]=event.target.checked\n        this.monitors.forEach(monitor=>monitor.reload(this))\n      }\n\n      render(){\n        const GreenCheckbox = withStyles({\n            root: {\n              color: green[400],\n              '&$checked': {\n                color: green[600],\n              },\n            },\n            checked: {},\n          })(props => <Checkbox color=\"default\" {...props} />);\n        const items = this.statue.values.map(item=>{\n            return <FormControlLabel\n        control={\n          <GreenCheckbox            \n            onChange={this.handleChange}\n            value={item}\n          />\n        }\n        label={item}\n      />\n        })\n        return <div>{items}</div>\n\n      }\n}","import React from 'react';\nimport {Tree} from \"@blueprintjs/core\";\nimport { Utils } from '../../../utils/Utils';\nimport { ActionProxy } from '../../../service/ActionProxy';\n\n\n\nexport class AutoGenTreeView2 extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.form = props.form\n        this.name = props.name\n        this.forms = this.form.forms\n        this.json = props.json        \n        const nodes = Utils.buildTree(this.json)\n        this.state = { nodes: nodes }\n        this.dependencies = props.dependencies\n        this.action = props.action\n\n\n        this.monitors = []\n        this.dependencies = props.dependencies\n        this.collect_dependencies = new Set()\n\n\n        this.reload = this.reload.bind(this)       \n        this.handleNodeClick = this.handleNodeClick.bind(this)\n        this.handNodeDoubleClick = this.handNodeDoubleClick.bind(this)\n        this.handleNodeCollapse = this.handleNodeCollapse.bind(this)\n        this.handleNodeExpand = this.handleNodeExpand.bind(this)\n        this.onNodeContextMenu = this.onNodeContextMenu.bind(this)\n    }\n\n    async reload(input) {        \n        this.collect_dependencies.add(input)\n        const temp1 = new Set(Array.from(this.collect_dependencies).map(item => item.name))\n        const temp2 = new Set(this.dependencies)\n                \n        if (Utils.setEqual(temp1,temp2)) {            \n            const proxy = new ActionProxy()\n            const params = {}\n            this.dependencies.forEach(item => params[item] = this.forms[item])            \n            const resp = await proxy.backend.request(this.action, params) \n            if(resp.status === 200){\n                const nodes = Utils.buildTree(JSON.parse(resp.content[0].value))\n                this.setState({nodes:nodes})\n            }\n            \n        }\n    }\n\n    async handleNodeClick(nodeData, _nodePath, e){          \n        const originallySelected = nodeData.isSelected;\n        if (!e.shiftKey) {\n            this.forEachNode(this.state.nodes, n => (n.isSelected = false));\n        }\n        nodeData.isSelected = originallySelected == null ? true : !originallySelected;\n        this.setState(this.state);\n        \n        this.forms[this.name]= nodeData.id\n        this.monitors.forEach(monitor=>monitor.reload(this))\n    } \n\n    async handNodeDoubleClick(nodeData, _nodePath, e){        \n        this.forms[this.name]= nodeData.id\n        this.monitors.forEach(monitor=>monitor.reload(this))\n    }\n\n    async handleNodeCollapse(nodeData){        \n        nodeData.isExpanded = false;\n        this.toggleIsExpanded(nodeData.id, false)\n        this.setState(this.state); \n    }\n\n    async handleNodeExpand(nodeData){\n        nodeData.isExpanded = true;\n        this.toggleIsExpanded(nodeData.id, true)\n        this.setState(this.state); \n    }\n\n    async onNodeContextMenu(node, _nodePath, e){\n\n    }\n\n    toggleIsExpanded = (id, isExpanded) => {\n       \n    }\n\n    forEachNode(nodes, callback) {\n        if (nodes == null) {\n            return;\n        }\n\n        for (const node of nodes) {\n            callback(node);\n            this.forEachNode(node.childNodes, callback);\n        }\n    }\n\n    isRootNode = (nodeId) => {\n        return this.state.nodes[0].id === nodeId\n    }\n\n    addMonitor = (monitor) => {\n        this.monitors.push(monitor)\n    }\n\n    render() {\n            \n        return (\n            <div>                \n                <Tree\n                    contents={this.state.nodes}\n                    onNodeClick={this.handleNodeClick}\n                    onNodeCollapse={this.handleNodeCollapse}\n                    onNodeExpand={this.handleNodeExpand}\n                    onNodeContextMenu={this.onNodeContextMenu}\n                    onNodeDoubleClick={this.handNodeDoubleClick}                    \n                />                \n            </div>\n        );\n    }\n}\n\nclass TreeNodeEnum {\n    static DIR = 1\n    static FILE = 2\n}","import React from \"react\"\nimport { AutoGenBaseComp } from \"./AutoGenBaseComp\"\nimport { FormElementMapping } from \"../FormElementMapping\"\n\nexport class AutoGenDynamic extends AutoGenBaseComp{\n    constructor(props){\n        super(props)\n        this.subTpe = props.subTpe \n        this.row = props.row       \n    }\n    build() {     \n        let meta = {name:this.name,values:[]}    \n        if(this.subTpe === \"TreeSelect\"){\n            meta = {name:this.name,json:JSON.stringify([{values:[]}])}    \n        }\n\n        let element = undefined\n        if(this.subTpe===\"Dynamic\"){\n            element = FormElementMapping.mapping[this.subTpe](meta,this.form)\n        }else {            \n            element = FormElementMapping.mapping[this.subTpe](meta,this.form,this.dependencies,this.action)\n        }\n        \n        return element\n    }\n}","import React from 'react'\nimport brace from 'brace';\nimport 'brace/ext/searchbox';\nimport AceEditor from 'react-ace';\nimport 'brace/mode/sql';\nimport 'brace/theme/github';\nimport 'brace/ext/language_tools';\nimport {Resizable} from \"re-resizable\";\nimport { AutoGenBaseComp } from './AutoGenBaseComp';\n\n\nexport class AutoGenEditor extends AutoGenBaseComp{\n    /**\n     * \n     * @param {AutoGenForm} form \n     */\n    constructor(props){\n        super(props)        \n        this.language = (props.values.values[0] && props.values.values[0].name) || \"python\"\n      }\n      \n      handleChange = (event)=>{        \n        this.forms[this.name]= this.editorRef.editor.getValue()\n        this.monitors.forEach(monitor=>monitor.reload(this))\n      }\n\n      render(){        \n        return (\n          <div>\n            <div>{this.state.data.options?.label || this.name}</div>\n          <Resizable defaultSize={{height: \"500px\"}} onResize={()=>{this.editorRef.editor.resize();}}>\n          <AceEditor\n          ref={item=>this.editorRef=item}\n          mode={this.language}\n          theme=\"github\"\n          width={\"100%\"}\n          height={\"100%\"}\n          onChange={this.handleChange}\n          name=\"mlsql_editor\"\n          fontSize={16}\n          showPrintMargin={true}\n          showGutter={true}\n          highlightActiveLine={true}\n          editorProps={{\n              $blockScrolling: Infinity\n          }}\n          setOptions={{\n              enableBasicAutocompletion: true,\n              enableLiveAutocompletion: true,\n              enableSnippets: false,\n              showLineNumbers: true,\n              tabSize: 2,\n              autoScrollEditorIntoView: true\n          }}\n      /></Resizable>\n      </div> \n      \n                      \n        );\n      }\n}","import React from 'react'\nimport {AutoGenBaseComp} from './AutoGenBaseComp';\nimport Dropzone from 'react-dropzone'\nimport {fromEvent} from 'file-selector';\nimport request from \"superagent\";\nimport {BACKEND_URL} from \"../../../service/backend/RestConst\";\nimport './AutoGenUpload.css'\nimport {getUserInfo} from \"../../../user/user\";\nimport {GlobalParamNames} from \"../../../service/Dicts\";\n\nconst baseStyle = {\n    width: 200,\n    height: 200,\n    borderWidth: 2,\n    borderColor: '#666',\n    borderStyle: 'dashed',\n    borderRadius: 5\n};\nconst activeStyle = {\n    borderStyle: 'solid',\n    borderColor: '#6c6',\n    backgroundColor: '#eee'\n};\nconst rejectStyle = {\n    borderStyle: 'solid',\n    borderColor: '#c66',\n    backgroundColor: '#eee'\n};\n\n\nexport class AutoGenUpload extends AutoGenBaseComp {\n    /**\n     *\n     * @param {AutoGenForm} form\n     */\n    constructor(props) {\n        super(props)\n        this.state = {\n            files: [],\n            msg: \"\",\n            action: props.action\n        }\n    }\n\n    handleChange = (event) => {\n\n    }\n\n    onDrop = (files) => {\n        this.setState({files})\n        const params = {}\n\n        const {token, userName} = getUserInfo()\n\n        if (userName) {\n            params[GlobalParamNames.USER_NAME] = userName\n        }\n\n        if (token) {\n            params[GlobalParamNames.LOGIN_TOKEN] = token\n        }\n\n        let formBody = [];\n        for (let property in params) {\n            let encodedKey = encodeURIComponent(property);\n            let encodedValue = encodeURIComponent(params[property]);\n            formBody.push(encodedKey + \"=\" + encodedValue);\n        }\n\n        let newurl = BACKEND_URL + \"?\" + \"action=\" + this.state.action + \"&\" + formBody.join(\"&\")\n\n        const req = request.post(newurl);\n\n        files.forEach(file => {\n            req.attach(file.path, file);\n        });\n\n        req.end((err, res) => {\n            this.setState({files: []})\n            if (!err) {\n                if (res.ok) {\n                    const paths = JSON.parse(res.text).map(item => item[\"path\"])\n                    // const pathStr = paths.join(\"\\n\")\n                    this.forms[this.name] = paths.join(\",\")\n                    this.monitors.forEach(monitor => monitor.reload(this))\n                    this.setState({msg: \"total files:\" + files.length + \" are uploaded. \"})\n                }\n            } else {\n                this.setState({msg: err.toString() + \"\\n\" + res.text + \"\\n  Sometimes this caused by your upload space is not enough or backend fails\"})\n            }\n        })\n    }\n\n    render() {\n\n        const files = this.state.files.map(f => (\n            <li key={f.name}>\n                {f.path} - {f.size} bytes\n            </li>\n        ))\n\n        return (\n            <section className={\"fileListStyle\"}>\n                <div>\n                    <Dropzone onDrop={this.onDrop}\n                              getDataTransferItems={evt => fromEvent(evt)}\n                    >\n                        {({getRootProps, getInputProps, isDragActive, isDragAccept, isDragReject, acceptedFiles, rejectedFiles}) => {\n                            let styles = {...baseStyle}\n                            styles = isDragActive ? {...styles, ...activeStyle} : styles\n                            styles = isDragReject ? {...styles, ...rejectStyle} : styles\n\n                            return (\n                                <div\n                                    {...getRootProps()}\n                                    style={styles}\n                                >\n                                    <input {...getInputProps()} />\n                                    <div>\n                                        {isDragAccept ? 'Drop' : 'Drag'} files here...\n                                    </div>\n                                    {isDragReject && <div>Unsupported file type...</div>}\n                                </div>\n                            )\n                        }}\n                    </Dropzone>\n                </div>\n                <aside>\n                    <h4>{files.length === 0 ? \"\" : \"Files\"}</h4>\n                    <ul>{files}</ul>\n                </aside>\n                <div>{this.state.msg ? this.state.msg : \"\"}</div>\n            </section>\n        );\n    }\n}","import React from 'react'\nimport {AutoGenInput} from './autogens/AutoGenInput'\nimport {AutoGenSelect} from './autogens/AutoGenSelect'\nimport {AutoGenCheckBox} from './autogens/AutoGenCheckBox'\nimport {AutoGenTreeView2} from './autogens/AutoGenTreeView2'\nimport {AutoGenDynamic} from './autogens/AutoGenDynamic'\nimport {AutoGenEditor} from './autogens/AutoGenEditor'\nimport {AutoGenUpload} from \"./autogens/AutoGenUpload\";\n\nexport class FormElementMapping {\n\n    static mapping = {\n        \"Input\": (row, form, dependencies, action) => {\n            const input = <AutoGenInput ref={item => form.pushInstance(item)} form={form} name={row.name} values={[]}\n                                        dependencies={dependencies} action={action} data={row}></AutoGenInput>\n            return input\n        },\n        \"Select\": (row, form, dependencies, action) => {\n            const select = <AutoGenSelect ref={item => form.pushInstance(item)} form={form} name={row.name}\n                                          values={row.values} dependencies={dependencies}\n                                          action={action} data={row}></AutoGenSelect>\n            return select\n        },\n        \"CheckBox\": (row, form, dependencies, action) => {\n            const checkbox = <AutoGenCheckBox ref={item => form.pushInstance(item)} form={form} name={row.name}\n                                              values={row.values} dependencies={dependencies}\n                                              action={action} data={row}></AutoGenCheckBox>\n            return checkbox\n        },\n        \"TreeSelect\": (row, form, dependencies, action) => {\n            const tree = <AutoGenTreeView2 ref={item => form.pushInstance(item)} form={form} name={row.name}\n                                           json={JSON.parse(row.json)[0].values || []} values={[]}\n                                           dependencies={dependencies} action={action} data={row}></AutoGenTreeView2>    //(form,row.name,JSON.parse(row.json)[0].value)\n            return tree\n        },\n        \"Editor\": (row, form, dependencies, action) => {\n            const tree = <AutoGenEditor ref={item => form.pushInstance(item)} form={form} name={row.name} values={row.values}\n                                        dependencies={dependencies} action={action} data={row}></AutoGenEditor>\n            return tree\n        },\n        \"Upload\": (row, form, dependencies, action) => {\n            const upload = <AutoGenUpload ref={item => form.pushInstance(item)} form={form} name={row.name}\n                                          dependencies={dependencies} action={row.valueProviderName} data={row}></AutoGenUpload>\n            return upload\n        },\n        \"Dynamic\": (row, form) => {\n            let params = {\n                name: row.name,\n                subTpe: row.subTpe,\n                form: form,\n                action: row.valueProviderName,\n                dependencies: row.depends,\n                row: row\n            }\n            const dynamicComp = new AutoGenDynamic(params)\n\n            return dynamicComp.build()\n        }\n    }\n\n}\n","import React from 'react'\nimport {ActionProxy, ResponseKey} from '../../service/ActionProxy'\nimport {AutoGenForm} from './autogens/AutoGenForm'\nimport {FormElementMapping} from './FormElementMapping'\n\nexport class FormBuilder {\n\n    /**\n     * @param {ActionProxy} proxy\n     */\n    constructor(proxy, router, extra_params) {\n        this.proxy = proxy\n        this.router = router\n        delete extra_params.action\n        this.extra_params = extra_params\n    }\n\n    /**\n     * @param {string} action\n     */\n    async build(action, submit, instances) {\n        const res = await this.proxy.post(action, {\"__HELP__\": \"true\", ...this.extra_params})\n\n        if (res.status !== 200) {\n            return [res.status,res.content]\n        }\n\n        /**@type {[]} */\n        const json = res.content\n\n        let title = action\n\n        const form = new AutoGenForm({action: action, submit: submit, router: this.router})\n        json.forEach(item => {\n            if(item.tpe !== \"Title\") {\n                const autogen = FormElementMapping.mapping[item.tpe](item, form)\n                form.push(autogen)\n            }else {\n                title = item.value?.replace(/^[\"'](.+(?=[\"']$))[\"']$/, '$1')\n            }\n        })\n        form.setTitle(title)\n        return [200,form]\n    }\n\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\n\n\nexport default class TableView extends React.Component {\n\n  constructor(props) {\n    super(props)\n    this.props = props\n    this.state = { rows: [], columns: [] }\n  }\n\n\n  load = (data) => {\n    \n    if(!Array.isArray(data)){\n      data = [data]\n    }\n\n    let maxSize = 0\n    let maxSizeItem = {}\n    data.forEach(item => {\n      const wow = Object.keys(item).length\n      if (wow > maxSize) {\n        maxSize = wow\n        maxSizeItem = item\n      }\n    })\n    const columns = Object.keys(maxSizeItem) || []\n    const newData = data.map(item => {\n      columns.forEach((col, index) => {\n        const value = item[col]\n        if ((typeof value) === 'object') {\n          item[col] = JSON.stringify(value).substring(0, 300)\n        }\n        if ((typeof value) === 'array') {          \n          item[col] = value.join(\",\").substring(0, 300)\n          \n        }\n        if ((typeof value) === 'boolean') {\n          item[col] = value.toString()          \n        }\n      })\n      return item\n    })\n    this.setState({ rows: newData, columns: columns })\n  }\n\n  useStyles = () => makeStyles({\n    table: {\n      minWidth: 650,\n    }\n  });\n\n  render() {\n    const classes = this.useStyles();\n\n    const tableHeaders = this.state.columns.map(item => {\n      return <TableCell>{item}</TableCell>\n    })\n\n    const tableRows = this.state.rows.map((row) => {\n      const tableRow = this.state.columns.map(col => {\n        return <TableCell component=\"th\" scope=\"row\">{row[col]}</TableCell>\n      })\n      return <TableRow>\n        {tableRow}\n      </TableRow>\n    })\n\n    return (\n      <TableContainer component={Paper} >\n        <Table className={classes.table} aria-label=\"simple table\">\n          <TableHead>\n            <TableRow>\n              {tableHeaders}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {tableRows}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    );\n  }\n}","import React from 'react'\nimport {ActionProxy} from '../service/ActionProxy'\nimport {FormBuilder} from './api_form/Form'\nimport TableView from './api_form/TableView'\nimport {BaseComp} from './BaseReactComp/BaseComp';\nimport Warning from './api_form/Warning';\nimport './APIView.css'\nimport {setUserInfo} from \"../user/user\"\n\n\nexport default class APIView extends BaseComp {\n    constructor(props) {\n        super(props)\n        this.router = props.router\n        if (props.submit) {\n            this.submit = props.submit\n        } else {\n            this.submit = this.submit.bind(this)\n        }\n\n        this.state = {action: props.action, extra_params: props.extra_params || {}}\n    }\n\n    async submit(evt) {\n        evt.preventDefault()\n        const proxy = new ActionProxy()\n        let extra_params = this.state.extra_params || {}\n        delete extra_params.action\n\n        let new_extra_params = {}\n        Object.keys(extra_params).forEach((key,index)=>{\n            new_extra_params[\"extra.\"+key] = extra_params[key]\n        })\n        const params = this.form.forms\n        //clean empty param\n        Object.keys(params).forEach(key => {\n            if (!params[key]) {\n                delete params[key]\n            }\n        })\n        const res = await proxy.backend.request(this.state.action, {...new_extra_params,...params})\n        const errorView = this.errorView\n        if (res.status !== 200) {\n            errorView.warn(\"Response error\", res.content)\n        }\n        if (res.status === 200 && this.view) {\n            try {\n                if (this.state.action === \"userLogin\") {\n                    setUserInfo(res.content[0])\n                    this.router.refreshBar()\n                }\n                this.view.load(res.content)\n            } catch (ex) {\n                errorView.warn(\"Data can not display in table\", res.content + \"\")\n            }\n        }\n    }\n\n    async componentDidMount() {\n        const proxy = new ActionProxy()\n\n        let extra_params = this.state.extra_params || {}\n        let new_extra_params = {}\n        Object.keys(extra_params).forEach((key,index)=>{\n            new_extra_params[\"extra.\"+key] = extra_params[key]\n        })\n\n        const builder = new FormBuilder(proxy, this.router,new_extra_params)\n        const [status,content] = await builder.build(this.state.action, this.submit)\n\n        if(status !== 200) {\n            this.errorView.warn(\"Response error\", content)\n            return\n        }\n\n        this.form = content\n\n        await this.setStateSync({form: this.form.build()})\n\n        //configure dependency of components\n        const inputWithDepends = this.form.instances.filter(item => item.dependencies)\n        const inputAlonesMap = {}\n        this.form.instances.forEach(item => {\n            inputAlonesMap[item.name] = item\n        })\n        inputWithDepends.forEach(item => {\n            item.dependencies.forEach(dep => {\n                inputAlonesMap[dep].addMonitor(item)\n            })\n        })\n    }\n\n    render() {\n        return <div className=\"api_box\">\n            <div><Warning ref={item => this.errorView = item}></Warning></div>\n            <div>{this.state.form}</div>\n            <div style={{marginTop: \"30px\"}}><TableView ref={(item) => this.view = item}></TableView></div>\n        </div>\n\n    }\n\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {withStyles} from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\nconst styles = {\n    card: {\n        minWidth: 275,\n    },\n    bullet: {\n        display: 'inline-block',\n        margin: '0 2px',\n        transform: 'scale(0.8)',\n    },\n    title: {\n        fontSize: 14,\n    },\n    pos: {\n        marginBottom: 12,\n    },\n};\n\nfunction SimpleCard(props) {\n    const {classes, card, handleClick} = props;\n    return (\n        <Card className={classes.card}>\n            <CardContent>\n                <Typography variant=\"h5\" component=\"h2\">\n                    {card.name}\n                </Typography>\n                <Typography className={classes.pos} color=\"textSecondary\">\n                    API\n                </Typography>\n                <Typography component=\"p\">\n                    No Description\n                </Typography>\n            </CardContent>\n            <CardActions>\n                <Button onClick={handleClick} size=\"large\">View</Button>\n            </CardActions>\n        </Card>\n    );\n}\n\nSimpleCard.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(SimpleCard);","import React from 'react'\nimport {makeStyles} from '@material-ui/core/styles';\n\nimport {BaseComp} from '../components/BaseReactComp/BaseComp'\nimport {ActionProxy} from '../service/ActionProxy';\nimport APICard from \"./api_main/APICard\";\nimport './APIMain.css'\n\n\nexport default class APIView extends BaseComp {\n    constructor(props) {\n        super(props)\n        this.router = props.router\n        this.action = props.action\n        this.state = {}\n        this.handleListItemClick = this.handleListItemClick.bind(this)\n    }\n\n    useStyles = () => makeStyles(theme => ({\n        root: {\n            width: '100%',\n            maxWidth: '100%',\n            backgroundColor: theme.palette.background.paper,\n        }\n    }));\n\n    async handleListItemClick(evt, action) {\n        this.router.toAction(action)\n    }\n\n    async goToNav(evt) {\n        this.router.toNav()\n    }\n\n    async componentDidMount() {\n        const proxy = new ActionProxy()\n        const resp = await proxy.get(this.action, {})\n        const myself = this\n        const cards = resp.content.map((item, index) => {\n            return item\n        })\n        let groups = {}\n\n        cards.forEach(item => {\n            const comp = <div className={\"card\"}><APICard card={item}\n                                                          handleClick={event => myself.handleListItemClick(event, item.name)}></APICard>\n            </div>\n            let groupName = item.groupName || \"Others\"\n            if (!groups.hasOwnProperty(groupName)) {\n                groups[groupName] = []\n            }\n            groups[groupName].push(comp)\n        })\n\n        const children = Object.entries(groups).map(([key, value]) => {\n            return <div key={key}>\n                <div className=\"cards_title\">\n                    <span className=\"cards_title_text\">{key}</span>\n                </div>\n                <div className=\"cards\">\n                    {value}\n                </div>\n            </div>\n        })\n\n        await this.setStateSync({items: children})\n    }\n\n\n    render() {\n        const classes = this.useStyles()\n        return (\n            <div className={classes.root}>\n                {this.state.items}\n            </div>\n        );\n    }\n}","import * as React from \"react\";\nimport {Steps, Button, message, List, notification, Card, Col, Row} from 'antd';\nimport { ActionProxy } from \"../service/ActionProxy\";\nimport RemoteAction from \"../service/RemoteAction\"\nimport APIView from '../components/APIView';\nimport \"./APINav.css\"\n\nconst Step = Steps.Step;\n\nexport default class APINav extends React.Component {\n    constructor(props) {\n        super(props);\n        this.router = props.router\n        this.state = {\n            current: 0,\n            steps:[],\n            apiNavId:props.apiNavId\n        }\n        \n    }\n\n    openNotificationWithIcon = (type, message, description) => {\n        notification[type]({\n            message: message,\n            description: description\n        });\n    };\n\n\n    async componentDidMount() {\n        const proxy = new ActionProxy()        \n        const resp = await proxy.get(RemoteAction.LIST_APINavItems,{apiNavId:this.state.apiNavId})\n        if(resp.status === 200){            \n            const items = resp.content.map((item,index)=>{                               \n                return {\n                    title: item.title,\n                    content: ()=>{\n                    return <Card title={item.title} bordered={true}>\n                    <APIView router={this.router} key={index}  action={item.action}></APIView>        \n                </Card>}\n                }\n            })            \n            this.setState({steps:items}) \n        }\n        \n    }\n\n    next() {\n        const current = this.state.current + 1;\n        this.setState({current});\n\n\n    }\n\n    prev() {\n        const current = this.state.current - 1;\n        this.setState({current});\n    }\n\n    render() {\n        const {current} = this.state;    \n        if(this.state.steps.length==0){\n            return <div>No Items Available</div>\n        }    \n        return (\n            <div className=\"api_nav\">\n                <div className=\"steps-action\" style={{marginBottom: \"30px\"}}>\n                    {\n                        current < this.state.steps.length - 1\n                        && <Button type=\"primary\" onClick={() => this.next()}>Next Step</Button>\n                    }\n                    {\n                        current === this.state.steps.length - 1\n                        && <Button type=\"primary\" onClick={() => message.success('Processing complete!')}>Done</Button>\n                    }\n                    {\n                        current > 0\n                        && (\n                            <Button style={{marginLeft: 8}} onClick={() => this.prev()}>\n                                Previous Step\n                            </Button>\n                        )\n                    }\n                </div>\n                <div className={\"steps-nav\"}>\n                    <Steps current={current}>\n                        {this.state.steps.map(item => <Step key={item.title} title={item.title}/>)}\n                    </Steps>\n                </div>\n                <div className=\"steps-content\" style={{\"margin-top\": \"30px\"}}>\n                     {this.state.steps[current].content()}\n                </div>\n\n            </div>\n        );\n    }\n\n}","import React from 'react';\n\nexport class BaseRouter extends React.Component{\n    constructor(props){\n        super(props)\n        this.app = props.app\n        this.router = props.router \n        this.pages = [{func:this.toPage1,params:[]}]       \n    }\n    \n    popPage(){\n        this.pages.pop()\n        const page = this.pages.pop()\n        if(page){\n            const {func,params} = page\n            func(...params)\n        }else{\n            if(this.router){\n                this.router.popPage()\n            }else{\n                this.toPage1()\n            }           \n        }\n  \n     } \n\n     toPage1(){\n\n     }\n}","import React from 'react';\nimport APIView from '../components/APIView';\nimport APINav from '../components/APINav';\nimport RemoteAction from '../service/RemoteAction';\nimport {BaseRouter} from './BaseRouter'\n\nexport class APINavSwitcher extends BaseRouter{\n    constructor(props){\n        super(props)\n        \n        this.state={\n            page1:true,\n            page2:false,\n            apiNavId:-1\n        }\n        this.submit = this.submit.bind(this)         \n        this.toPage1 = this.toPage1.bind(this)\n        this.toPage2 = this.toPage2.bind(this)\n\n        this.pages = [{func:this.toPage1,params:[]}]\n    }\n\n    async submit(evt){\n       evt.preventDefault()\n       const params = this.apiView.form.forms       \n       this.toPage2(params[\"apiNavId\"])\n    }\n\n   toPage1 = ()=>{       \n      this.pages.push({func:this.toPage1,params:[]})\n      this.setState({page1:true,page2:false})\n   } \n\n   toPage2 = (apiNavId)=>{     \n      this.pages.push({func:this.toPage2,params:[apiNavId]})\n      this.setState({page1:false,page2:true,apiNavId:apiNavId})\n   }    \n\n   render(){      \n       if(this.state.page1){    \n        return (<div>\n           <APIView ref={item=>this.apiView=item} \n           action={RemoteAction.ChooseAPINav} \n           router={this}  submit={this.submit}></APIView>\n        </div>)\n       }     \n     else {        \n        return (<div>                  \n           <APINav router={this} apiNavId={this.state.apiNavId}></APINav>\n        </div>)\n     }\n   }\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {withStyles} from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport {useToken, getUserName, logout, getUserInfo} from '../../user/user'\n\nconst styles = {\n    root: {\n        flexGrow: 1,\n    },\n    grow: {\n        flexGrow: 1,\n    },\n    menuButton: {\n        marginLeft: -12,\n        marginRight: 20,\n    },\n};\n\nfunction ButtonAppBar(props) {\n    const {classes, router} = props;\n    const token = getUserInfo().token\n\n    const loginOrReg = () => {\n        if (token) {\n            return <div><Button onClick={async () => {\n                await logout()\n                router.toNav()\n            }} color=\"inherit\">Logout</Button>{getUserName()}</div>\n        }\n        return <div><Button onClick={() => {\n            router.toAction(\"userLogin\")\n        }} color=\"inherit\">Login</Button>\n            <Button onClick={() => {\n                router.toAction(\"userReg\")\n            }} color=\"inherit\">Register</Button>\n        </div>\n    }\n\n    return (\n        <div className={classes.root}>\n            <AppBar position=\"static\">\n                <Toolbar>\n                    <IconButton className={classes.menuButton} color=\"inherit\" aria-label=\"Menu\">\n                        <MenuIcon/>\n                    </IconButton>\n                    <Typography>\n                        <Button onClick={() => {\n                            router.toNav()\n                        }} className={classes.menuButton} color=\"inherit\" aria-label=\"Menu\">API Chain</Button>\n                    </Typography>\n                    <Typography>\n                        <Button onClick={() => {\n                            router.toPage1()\n                        }} className={classes.menuButton} color=\"inherit\" aria-label=\"Menu\">API List</Button>\n                    </Typography>\n\n                    <Typography variant=\"h6\" color=\"inherit\" className={classes.grow}>\n                        APIs Master\n                    </Typography>\n                    {\n                        loginOrReg()\n                    }\n\n                </Toolbar>\n            </AppBar>\n        </div>\n    );\n}\n\nButtonAppBar.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(ButtonAppBar);","import React from 'react';\nimport APIView from '../components/APIView';\nimport APIMain from '../components/APIMain';\nimport RemoteAction from '../service/RemoteAction';\nimport {APINavSwitcher} from '../router/APINavSwitcher'\nimport {BaseRouter} from './BaseRouter'\nimport APIBar from \"../components/api_main/APIBar\";\nimport queryString from 'query-string';\n\nexport class APIViewSwitcher extends BaseRouter {\n    constructor(props) {\n        super(props)\n        const extra_params = queryString.parse(window.location.href.split(\"?\")[1])\n\n        const current_action = (extra_params && extra_params[\"action\"]) || RemoteAction.LIST_ACTIONS\n\n        let current_page = {\n            page1: false,\n            page2: false,\n            nav: true\n        }\n\n        if (extra_params && extra_params[\"action\"]) {\n            current_page = {\n                page1: false,\n                page2: true,\n                nav: false\n            }\n        }\n\n        this.state = {\n            ...current_page,\n            current_action,\n            refresh: 0,\n            extra_params\n        }\n        this.toPage1 = this.toPage1.bind(this)\n        this.toAction = this.toAction.bind(this)\n        this.toNav = this.toNav.bind(this)\n        this.popPage = this.popPage.bind(this)\n\n        this.pages = [{func: this.toPage1, params: []}]\n    }\n\n    toPage1 = () => {\n        this.pages.push({func: this.toPage1, params: []})\n        this.setState({page1: true, page2: false, nav: false,})\n    }\n\n    toAction = (action) => {\n        this.pages.push({func: this.toAction, params: [action]})\n        this.setState({page1: false, page2: true, nav: false, current_action: action})\n    }\n\n    toNav = () => {\n        this.pages.push({func: this.toNav, params: []})\n        this.setState({page1: false, page2: false, nav: true})\n    }\n\n    refreshBar = () => {\n        this.setState({refresh: this.state.refresh + 1})\n    }\n\n    render() {\n        return <div><APIBar router={this}></APIBar>\n            {this.state.page1 && <div>\n                <APIMain router={this} action={RemoteAction.LIST_ACTIONS}></APIMain>\n            </div>\n            }\n            {this.state.page2 && <div>\n                <APIView router={this} key={this.state.current_action} extra_params={this.state.extra_params} action={this.state.current_action}></APIView>\n            </div>\n            }\n            {this.state.nav && <div>\n                <APINavSwitcher router={this} app={this.app}></APINavSwitcher>\n            </div>\n            }\n        </div>\n\n    }\n}","import * as React from \"react\";\n\nexport type TestProps = {\n    name: string\n}\nexport default function APITest(props: TestProps) {\n    return <div>\n        hello {props.name}\n    </div>\n}","import React from 'react';\nimport 'antd/dist/antd.css';\nimport './App.css';\nimport {APIViewSwitcher} from './router/APIViewSwitcher';\nimport {HashRouter as Router, Route, Switch} from 'react-router-dom'\nimport APITest from \"./components/APITest\";\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <Router>\n                <Switch>\n                    <Route path=\"/test\">\n                        <APITest name={\"wow\"}/>\n                    </Route>\n                    <Route path=\"/\"><APIViewSwitcher app={this}></APIViewSwitcher></Route>\n                </Switch>\n            </Router>\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './mlsql.scss';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}